// <auto-generated />
using Dws.Note_one.Api.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace note_one_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230107194814_InitialSqlite")]
    partial class InitialSqlite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Dws.Note_one.Api.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Name = "Fruits and Vegetables"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Dairy"
                        });
                });

            modelBuilder.Entity("Dws.Note_one.Api.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<short>("QuantityInPackage")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("UnitOfMeasurement")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 101,
                            Name = "Milk",
                            QuantityInPackage = (short)10,
                            UnitOfMeasurement = (byte)5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 100,
                            Name = "Apple",
                            QuantityInPackage = (short)1,
                            UnitOfMeasurement = (byte)4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 100,
                            Name = "Onion",
                            QuantityInPackage = (short)20,
                            UnitOfMeasurement = (byte)4
                        });
                });

            modelBuilder.Entity("Dws.Note_one.Api.Domain.Models.Product", b =>
                {
                    b.HasOne("Dws.Note_one.Api.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dws.Note_one.Api.Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
